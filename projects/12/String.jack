// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {

    /** Constructs a new empty String with a maximum length of maxLength. */
    constructor String new(int maxLength) {
        var Array string;
        var int i;
        let i =0;
        let string =Array.new(maxLength+1);
        while (i<(maxLength+10)) {
            let string[i]=0;
        }
        let this =string;
        return this;
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Returns the current length of this String. */
    method int length() {
        var int i;
        let i=0;
        while (~(this[i]=0))  {
            let i=i+1;
        }
        return i;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {
        return string[j];
    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
        let this[j]=c;
        return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
        var int j;
        let j=0;
        while (~(this[j]=0))    {
            let j=j+1;
        }
        let this[j]=c;
        return;
    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
        var int j;
        let j=0;
        while (~(this[j]=0)){
            let j=j+1;
        }
        let this[j-1]=0;
        return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
        var int j;
        var int sum;
        var int notend;
        let notend=true;
        let j=0;
        while (notend)    {
            if (this[j]<48) {
                notend=false;
            }
            else{
                if (this[j]>57) {
                    let notend=false;
                }

                else {
                    let sum=(sum*10)+this[j];
                    let j=j+1;
                }
            }

        }
        return sum;


    }

    /** Sets this String to hold a representation of the given number. */
    method void setInt(int number) {
        var char c;
        let c=number-(number/10)+48;
        if (number<10){
            do appendChar(c);
            return;
        }
        else {
            do setInt(number/10);
            do appendChar(c);
            return;
        }

    }

    /** Returns the new line character. */
    function char newLine() {
        var char=c;
        let c=128;
        return c;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        var char=c;
        let c=129;
        return c;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        var char=c;
        let c=34;
        return c;
    }
}
