// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents a String object. Implements the String type.
 */
class String {
    field Array string;
    field int n,max;
    /** Constructs a new empty String with a maximum length of maxLength. */
    constructor String new(int maxLength) {


        let string =Array.new(1);
        let max=maxLength;
        let n=0;

        return this;
    }

    /** De-allocates the string and frees its space. */
    method void dispose() {
        do string.dispose();
        do Memory.deAlloc(this);
        return;
    }

    /** Returns the current length of this String. */
    method int length() {
        return n;
    }

    /** Returns the character at location j. */
    method char charAt(int j) {

        return string[j];

    }

    /** Sets the j'th character of this string to be c. */
    method void setCharAt(int j, char c) {
        let string[j]=c;
        return;
    }

    /** Appends the character c to the end of this String.
     *  Returns this string as the return value. */
    method String appendChar(char c) {
        var Array tmp;
       var int i;

       let n=n+1;

       let i=0;
       let tmp=Array.new(n);
       while (i<(n-1)) {
           let tmp[i]=string[i];
           let i=i+1;
       }
       let tmp[n-1]=c;
       do string.dispose();
       let string=tmp;
   return this;


    }

    /** Erases the last character from this String. */
    method void eraseLastChar() {
        let string[n-1]=0;
        let n=n-1;
        return;
    }

    /** Returns the integer value of this String until the first non
     *  numeric character. */
    method int intValue() {
        var int j;
        var int sum;
        var boolean notend;
        var boolean fu;
        let notend=true;
        let j=0;
        let sum=0;
        if (string[j]=45)  {
            let fu=true;
            let j=1;
        }
        else{
            let fu=false;
        }
        while (notend)    {
            if ((string[j]<48)|(string[j]>57)) {
                let notend=false;
            }
            else {
                   let sum=sum*10+(string[j]-48);
                    let j=j+1;
                }


        }
        if (fu)    {
        let sum=0-sum;
        }
        return sum;


    }

    method void int2string(int number){
    var int c;
    let c=number-((number/10)*10)+48;
    if (number<10)  {
    do appendChar(c);
    return;
    }
    else{
    do int2string(number/10);
    do appendChar(c);
    return;
    }

    }

    /** Sets this String to hold a representation of the given number. */
    method void setInt(int number) {

        var int num;
        let n=0;
        if (number<0){
            let num=-number;
            do appendChar(45);
        }
        else {
            let num=number;
        }

        do int2string(num);
        return;

    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129;
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34;
    }
}
